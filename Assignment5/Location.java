/*
  Name: Bastien Gliech
  CIS 421 Artificial Intelligence
  Assignment: 5 - ACO
  Due: March, 2018
*/

import java.util.*;

// Location Class - serves as nodes of the graph generated by map
//
// Holds the majority of node specific information
public class Location implements Comparable<Location>{

  // fields
  public String name;
  public Set<Road> roads;

  /** Constructor
   * 
   * @param: none
   * @pre:   none
   * @post:  Location object is constructed 
   */
  public Location(){
    roads = new HashSet<Road>();
    history = new LinkedList<Location>();
  }

  /** Checks if two locations are similar if they have the same name
   *
   * @param: Location l -- Location to be tested against
   * @pre:   both locations have a name assigned
   * @post:  returns whether they are equal or not
   */
  public boolean equals(Location l){
    return l.name.equals(this.name);
  }

  /** Compares this node's fScore with the specified node's fScore
   *
   * @param: Location other -- Location to be compared to
   * @pre: both locations have a calculated fScore
   * @post: two objects are compared by their fScore
   */
  public int compareTo(Location other){

    // this heuristic is greater than other heuristic
    if (this.fScore > other.fScore){
      return 1;

    // this heuristic is less than other heuristic
    } else if (this.fScore < other.fScore){
      return -1;

    // heuristics are the same
    } else {
      return 0;
    }
  }
}